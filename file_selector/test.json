{
    "../scikit-learn-master/sklearn\\base.py": [
        [
            "_first_and_last_element",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\calibration.py": [
        [
            "_sigmoid_calibration",
            [
                [
                    {
                        "df": "ndarray, shape (n_samples,)",
                        "y": "ndarray, shape (n_samples,)",
                        "sample_weight": "array-like, shape = [n_samples] or None"
                    },
                    3,
                    0
                ],
                {
                    "a": "float",
                    "b": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cross_validation.py": [
        [
            "_approximate_mode",
            [
                [
                    {
                        "class_counts": "ndarray of int",
                        "n_draws": "int",
                        "rng": "random state"
                    },
                    3,
                    0
                ],
                {
                    "sampled_classes": "ndarray of int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\discriminant_analysis.py": [
        [
            "_cov",
            [
                [
                    {
                        "X": "array-like, shape (n_samples, n_features)",
                        "shrinkage": "string or float, optional"
                    },
                    2,
                    0
                ],
                {
                    "s": "array, shape (n_features, n_features)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\dummy.py": null,
    "../scikit-learn-master/sklearn\\exceptions.py": null,
    "../scikit-learn-master/sklearn\\grid_search.py": [
        [
            "fit_grid_point",
            [
                [
                    {
                        "X": "array-like, sparse matrix or list",
                        "y": "array-like or None",
                        "estimator": "estimator object",
                        "parameters": "dict",
                        "train": "ndarray, dtype int or bool",
                        "test": "ndarray, dtype int or bool",
                        "scorer": "callable or None.",
                        "verbose": "int",
                        "error_score": "'raise' (default) or numeric"
                    },
                    9,
                    0
                ],
                {
                    "score": "float",
                    "parameters": "dict",
                    "n_samples_test": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\isotonic.py": [
        [
            "check_increasing",
            [
                [
                    {
                        "x": "array-like, shape=(n_samples,)",
                        "y": "array-like, shape=(n_samples,)"
                    },
                    2,
                    0
                ],
                {
                    "increasing_bool": "boolean"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\kernel_approximation.py": null,
    "../scikit-learn-master/sklearn\\kernel_ridge.py": null,
    "../scikit-learn-master/sklearn\\learning_curve.py": [
        [
            "learning_curve",
            [
                [
                    {
                        "estimator": "object type that implements the \"fit\" and \"predict\" methods",
                        "X": "array-like, shape (n_samples, n_features)",
                        "y": "array-like, shape (n_samples) or (n_samples, n_features), optional",
                        "train_sizes": "array-like, shape (n_ticks,), dtype float or int",
                        "cv": "int, cross-validation generator or an iterable, optional",
                        "scoring": "string, callable or None, optional, default",
                        "exploit_incremental_learning": "boolean, optional, default",
                        "n_jobs": "integer, optional",
                        "pre_dispatch": "integer or string, optional",
                        "verbose": "integer, optional",
                        "error_score": "'raise' (default) or numeric"
                    },
                    11,
                    0
                ],
                {
                    "train_sizes_abs": "array, shape = (n_unique_ticks,), dtype int",
                    "train_scores": "array, shape (n_ticks, n_cv_folds)",
                    "test_scores": "array, shape (n_ticks, n_cv_folds)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\multiclass.py": [
        [
            "_fit_binary",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\multioutput.py": null,
    "../scikit-learn-master/sklearn\\naive_bayes.py": null,
    "../scikit-learn-master/sklearn\\pipeline.py": [
        [
            "_name_estimators",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\random_projection.py": [
        [
            "johnson_lindenstrauss_min_dim",
            [
                [
                    {
                        "n_samples": "int or numpy array of int greater than 0,",
                        "eps": "float or numpy array of float in ]0,1[, optional (default=0.1)"
                    },
                    2,
                    0
                ],
                {
                    "n_components": "int or numpy array of int,"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\setup.py": null,
    "../scikit-learn-master/sklearn\\__init__.py": [
        [
            "get_config",
            [
                [
                    {},
                    0,
                    0
                ],
                {
                    "config": "dict",
                    "to": "func"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\affinity_propagation_.py": [
        [
            "affinity_propagation",
            [
                [
                    {
                        "S": "array-like, shape (n_samples, n_samples)",
                        "preference": "array-like, shape (n_samples,) or float, optional",
                        "convergence_iter": "int, optional, default",
                        "max_iter": "int, optional, default",
                        "damping": "float, optional, default",
                        "copy": "boolean, optional, default",
                        "verbose": "boolean, optional, default",
                        "return_n_iter": "bool, default False"
                    },
                    8,
                    0
                ],
                {
                    "cluster_centers_indices": "array, shape (n_clusters,)",
                    "labels": "array, shape (n_samples,)",
                    "n_iter": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\bicluster.py": [
        [
            "_scale_normalize",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\birch.py": [
        [
            "_iterate_sparse_X",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\dbscan_.py": [
        [
            "dbscan",
            [
                [
                    {
                        "X": "array or sparse (CSR) matrix of shape (n_samples, n_features), or             array of shape (n_samples, n_samples)",
                        "eps": "float, optional",
                        "min_samples": "int, optional",
                        "metric": "string, or callable",
                        "metric_params": "dict, optional",
                        "algorithm": "{'auto', 'ball_tree', 'kd_tree', 'brute'}, optional",
                        "leaf_size": "int, optional (default = 30)",
                        "p": "float, optional",
                        "sample_weight": "array, shape (n_samples,), optional",
                        "n_jobs": "int, optional (default = 1)"
                    },
                    10,
                    0
                ],
                {
                    "core_samples": "array [n_core_samples]",
                    "labels": "array [n_samples]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\hierarchical.py": [
        [
            "_fix_connectivity",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\k_means_.py": [
        [
            "_k_init",
            [
                [
                    {
                        "X": "array or sparse matrix, shape (n_samples, n_features)",
                        "n_clusters": "integer",
                        "x_squared_norms": "array, shape (n_samples,)",
                        "random_state": "numpy.RandomState",
                        "n_local_trials": "integer, optional"
                    },
                    5,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\mean_shift_.py": [
        [
            "estimate_bandwidth",
            [
                [
                    {
                        "X": "array-like, shape=[n_samples, n_features]",
                        "quantile": "float, default 0.3",
                        "n_samples": "int, optional",
                        "random_state": "int, RandomState instance or None, optional (default=None)",
                        "n_jobs": "int, optional (default = 1)"
                    },
                    5,
                    0
                ],
                {
                    "bandwidth": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\setup.py": null,
    "../scikit-learn-master/sklearn\\cluster\\spectral.py": [
        [
            "discretize",
            [
                [
                    {
                        "vectors": "array-like, shape",
                        "copy": "boolean, optional, default",
                        "max_svd_restarts": "int, optional, default",
                        "n_iter_max": "int, optional, default",
                        "random_state": "int, RandomState instance or None, optional, default"
                    },
                    5,
                    0
                ],
                {
                    "labels": "array of integers, shape"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\_feature_agglomeration.py": null,
    "../scikit-learn-master/sklearn\\cluster\\__init__.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\common.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_affinity_propagation.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_bicluster.py": [
        [
            "_do_scale_test",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_birch.py": [
        [
            "check_threshold",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_dbscan.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_hierarchical.py": [
        [
            "assess_same_labelling",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_k_means.py": [
        [
            "test_x_squared_norms_init_centroids",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_mean_shift.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\test_spectral.py": null,
    "../scikit-learn-master/sklearn\\cluster\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\covariance\\empirical_covariance_.py": [
        [
            "log_likelihood",
            [
                [
                    {
                        "emp_cov": "2D ndarray (n_features, n_features)",
                        "precision": "2D ndarray (n_features, n_features)"
                    },
                    2,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\covariance\\graph_lasso_.py": [
        [
            "_objective",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\covariance\\outlier_detection.py": null,
    "../scikit-learn-master/sklearn\\covariance\\robust_covariance.py": [
        [
            "c_step",
            [
                [
                    {
                        "X": "array-like, shape (n_samples, n_features)",
                        "n_support": "int, > n_samples / 2",
                        "remaining_iterations": "int, optional",
                        "initial_estimates": "2-tuple, optional",
                        "verbose": "boolean, optional",
                        "cov_computation_method": "callable, default empirical_covariance",
                        "random_state": "int, RandomState instance or None, optional (default=None)"
                    },
                    7,
                    0
                ],
                {
                    "location": "array-like, shape (n_features,)",
                    "covariance": "array-like, shape (n_features, n_features)",
                    "support": "array-like, shape (n_samples,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\covariance\\shrunk_covariance_.py": [
        [
            "shrunk_covariance",
            [
                [
                    {
                        "emp_cov": "array-like, shape (n_features, n_features)",
                        "shrinkage": "float, 0 <= shrinkage <= 1"
                    },
                    2,
                    0
                ],
                {
                    "shrunk_cov": "array-like"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\covariance\\__init__.py": null,
    "../scikit-learn-master/sklearn\\covariance\\tests\\test_covariance.py": null,
    "../scikit-learn-master/sklearn\\covariance\\tests\\test_graph_lasso.py": null,
    "../scikit-learn-master/sklearn\\covariance\\tests\\test_robust_covariance.py": null,
    "../scikit-learn-master/sklearn\\covariance\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\cross_decomposition\\cca_.py": null,
    "../scikit-learn-master/sklearn\\cross_decomposition\\pls_.py": [
        [
            "_nipals_twoblocks_inner_loop",
            [
                [
                    {},
                    6,
                    6
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\cross_decomposition\\__init__.py": null,
    "../scikit-learn-master/sklearn\\cross_decomposition\\tests\\test_pls.py": null,
    "../scikit-learn-master/sklearn\\cross_decomposition\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\datasets\\base.py": [
        [
            "get_data_home",
            [
                [
                    {
                        "data_home": "str | None"
                    },
                    1,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\california_housing.py": [
        [
            "fetch_california_housing",
            [
                [
                    {
                        "data_home": "optional, default",
                        "download_if_missing": "optional, True by default"
                    },
                    2,
                    0
                ],
                {
                    "dataset": "dict-like object with the following attributes"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\covtype.py": [
        [
            "fetch_covtype",
            [
                [
                    {
                        "data_home": "string, optional",
                        "download_if_missing": "boolean, default=True",
                        "random_state": "int, RandomState instance or None, optional (default=None)",
                        "shuffle": "bool, default=False"
                    },
                    4,
                    0
                ],
                {
                    "dataset": "dict-like object with the following attributes"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\kddcup99.py": [
        [
            "fetch_kddcup99",
            [
                [
                    {
                        "subset": "None, 'SA', 'SF', 'http', 'smtp'",
                        "data_home": "string, optional",
                        "shuffle": "bool, default=False",
                        "random_state": "int, RandomState instance or None, optional (default=None)",
                        "percent10": "bool, default=True",
                        "download_if_missing": "bool, default=True"
                    },
                    6,
                    0
                ],
                {
                    "data": "Bunch",
                    "are": ""
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\lfw.py": [
        [
            "scale_face",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\mlcomp.py": [
        [
            "load_mlcomp",
            [
                [
                    {
                        "name_or_id": "the integer id or the string name metadata of the MLComp",
                        "set_": "select the portion to load",
                        "mlcomp_root": "the filesystem path to the root folder where MLComp datasets"
                    },
                    3,
                    0
                ],
                {
                    "data": "Bunch",
                    "are": "",
                    "process": "depending on the type of name_or_id,",
                    "TODO": "implement zip dataset loading too"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\mldata.py": [
        [
            "mldata_filename",
            [
                [
                    {
                        "dataname": "str"
                    },
                    1,
                    0
                ],
                {
                    "fname": "str"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\olivetti_faces.py": [
        [
            "fetch_olivetti_faces",
            [
                [
                    {
                        "data_home": "optional, default",
                        "shuffle": "boolean, optional",
                        "random_state": "int, RandomState instance or None, optional (default=0)",
                        "download_if_missing": "optional, True by default"
                    },
                    4,
                    0
                ],
                {
                    "attributes": "",
                    "data": "numpy array of shape (400, 4096)",
                    "images": "numpy array of shape (400, 64, 64)",
                    "target": "numpy array of shape (400, )",
                    "DESCR": "string"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\rcv1.py": [
        [
            "fetch_rcv1",
            [
                [
                    {
                        "data_home": "string, optional",
                        "subset": "string, 'train', 'test', or 'all', default='all'",
                        "download_if_missing": "boolean, default=True",
                        "random_state": "int, RandomState instance or None, optional (default=None)",
                        "shuffle": "bool, default=False"
                    },
                    5,
                    0
                ],
                {
                    "dataset": "dict-like object with the following attributes"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\samples_generator.py": [
        [
            "_generate_hypercube",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\setup.py": null,
    "../scikit-learn-master/sklearn\\datasets\\species_distributions.py": [
        [
            "_load_coverage",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\svmlight_format.py": [
        [
            "load_svmlight_file",
            [
                [
                    {
                        "f": "{str, file-like, int}",
                        "n_features": "int or None",
                        "dtype": "numpy data type, default np.float64",
                        "multilabel": "boolean, optional, default False",
                        "zero_based": "boolean or \"auto\", optional, default \"auto\"",
                        "query_id": "boolean, default False",
                        "offset": "integer, optional, default 0",
                        "length": "integer, optional, default -1"
                    },
                    8,
                    0
                ],
                {
                    "X": "scipy.sparse matrix of shape (n_samples, n_features)",
                    "y": "ndarray of shape (n_samples,), or, in the multilabel a list of",
                    "query_id": "array of shape (n_samples,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\twenty_newsgroups.py": [
        [
            "download_20newsgroups",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\__init__.py": null,
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_20news.py": [
        [
            "test_20news_length_consistency",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_base.py": [
        [
            "teardown_module",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_covtype.py": null,
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_kddcup99.py": null,
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_lfw.py": [
        [
            "setup_module",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_mldata.py": [
        [
            "test_download",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_rcv1.py": null,
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_samples_generator.py": [
        [
            "test_make_classification_informative_features",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\datasets\\tests\\test_svmlight_format.py": null,
    "../scikit-learn-master/sklearn\\datasets\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\base.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\dict_learning.py": [
        [
            "_sparse_encode",
            [
                [
                    {
                        "X": "array of shape (n_samples, n_features)",
                        "dictionary": "array of shape (n_components, n_features)",
                        "gram": "None | array, shape=(n_components, n_components)",
                        "cov": "array, shape=(n_components, n_samples)",
                        "algorithm": "{'lasso_lars', 'lasso_cd', 'lars', 'omp', 'threshold'}",
                        "regularization": "int | float",
                        "copy_cov": "boolean, optional",
                        "init": "array of shape (n_samples, n_components)",
                        "max_iter": "int, 1000 by default",
                        "check_input": "boolean, optional",
                        "verbose": "int"
                    },
                    11,
                    0
                ],
                {
                    "code": "array of shape (n_components, n_features)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\factor_analysis.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\fastica_.py": [
        [
            "_gs_decorrelation",
            [
                [
                    {
                        "w": "ndarray of shape(n)",
                        "W": "ndarray of shape(p, n)",
                        "j": "int < p"
                    },
                    3,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\incremental_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\kernel_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\nmf.py": [
        [
            "norm",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\online_lda.py": [
        [
            "_update_doc_distribution",
            [
                [
                    {
                        "X": "array-like or sparse matrix, shape=(n_samples, n_features)",
                        "exp_topic_word_distr": "dense matrix, shape=(n_topics, n_features)",
                        "doc_topic_prior": "float",
                        "max_iters": "int",
                        "mean_change_tol": "float",
                        "cal_sstats": "boolean",
                        "random_state": "RandomState instance or None"
                    },
                    7,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\pca.py": [
        [
            "_assess_dimension_",
            [
                [
                    {
                        "spectrum": "array of shape (n)",
                        "rank": "int",
                        "n_samples": "int",
                        "n_features": "int"
                    },
                    4,
                    0
                ],
                {
                    "ll": "float,"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\setup.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\sparse_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\truncated_svd.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\__init__.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_dict_learning.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_factor_analysis.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_fastica.py": [
        [
            "center_and_norm",
            [
                [
                    {
                        "x": "ndarray",
                        "axis": "int, optional"
                    },
                    2,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_incremental_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_kernel_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_nmf.py": [
        [
            "_beta_divergence_dense",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_online_lda.py": [
        [
            "test_lda_empty_docs",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_sparse_pca.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\test_truncated_svd.py": null,
    "../scikit-learn-master/sklearn\\decomposition\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\bagging.py": [
        [
            "_generate_indices",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\base.py": [
        [
            "_set_random_states",
            [
                [
                    {
                        "estimator": "estimator supporting get/set_params",
                        "random_state": "int, RandomState instance or None, optional (default=None)"
                    },
                    2,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\forest.py": [
        [
            "_generate_sample_indices",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\gradient_boosting.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\iforest.py": [
        [
            "_average_path_length",
            [
                [
                    {
                        "n_samples_leaf": "array-like of shape (n_samples, n_estimators), or int."
                    },
                    1,
                    0
                ],
                {
                    "average_path_length": "array, same shape as n_samples_leaf"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\partial_dependence.py": [
        [
            "_grid_from_X",
            [
                [
                    {
                        "X": "ndarray",
                        "percentiles": "tuple of floats",
                        "grid_resolution": "int"
                    },
                    3,
                    0
                ],
                {
                    "grid": "ndarray",
                    "axes": "seq of ndarray"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\setup.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\voting_classifier.py": [
        [
            "_parallel_fit_estimator",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\weight_boosting.py": [
        [
            "_samme_proba",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\__init__.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_bagging.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_base.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_forest.py": [
        [
            "check_classification_toy",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_gradient_boosting.py": [
        [
            "early_stopping_monitor",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_gradient_boosting_loss_functions.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_iforest.py": [
        [
            "test_iforest",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_partial_dependence.py": null,
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_voting_classifier.py": [
        [
            "test_majority_label_iris",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\tests\\test_weight_boosting.py": [
        [
            "test_sample_weight_adaboost_regressor",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\ensemble\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\externals\\funcsigs.py": [
        [
            "signature",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\setup.py": null,
    "../scikit-learn-master/sklearn\\externals\\six.py": [
        [
            "_add_doc",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\test_externals_setup.py": null,
    "../scikit-learn-master/sklearn\\externals\\__init__.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\backports.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\disk.py": [
        [
            "disk_used",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\format_stack.py": [
        [
            "safe_repr",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\func_inspect.py": [
        [
            "get_func_code",
            [
                [
                    {},
                    1,
                    1
                ],
                {
                    "func_code": "string",
                    "source_file": "string",
                    "first_line": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\hashing.py": [
        [
            "hash",
            [
                [
                    {
                        "hash_name": "'md5' or 'sha1'",
                        "coerce_mmap": "boolean"
                    },
                    3,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\logger.py": [
        [
            "_squeeze_time",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\memory.py": [
        [
            "extract_first_line",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\my_exceptions.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\numpy_pickle.py": [
        [
            "dump",
            [
                [
                    {
                        "value": "any Python object",
                        "filename": "str or pathlib.Path",
                        "compress": "int from 0 to 9 or bool or 2-tuple, optional",
                        "protocol": "positive int",
                        "cache_size": "positive int, optional"
                    },
                    5,
                    0
                ],
                {
                    "filenames": "list of strings"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\numpy_pickle_compat.py": [
        [
            "hex_str",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\numpy_pickle_utils.py": [
        [
            "_is_raw_file",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\parallel.py": [
        [
            "get_active_backend",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\pool.py": [
        [
            "_get_backing_memmap",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\_compat.py": [
        [
            "with_metaclass",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\externals\\joblib\\_memory_helpers.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\_multiprocessing_helpers.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\_parallel_backends.py": null,
    "../scikit-learn-master/sklearn\\externals\\joblib\\__init__.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\dict_vectorizer.py": [
        [
            "_tosequence",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_extraction\\hashing.py": [
        [
            "_iteritems",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_extraction\\image.py": [
        [
            "_make_edges_3d",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_extraction\\setup.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\stop_words.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\text.py": [
        [
            "strip_accents_unicode",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_extraction\\__init__.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\tests\\test_dict_vectorizer.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\tests\\test_feature_hasher.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\tests\\test_image.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\tests\\test_text.py": null,
    "../scikit-learn-master/sklearn\\feature_extraction\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\base.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\from_model.py": [
        [
            "_get_feature_importances",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_selection\\mutual_info_.py": [
        [
            "_compute_mi_cc",
            [
                [
                    {
                        "y": "ndarray, shape (n_samples,)",
                        "n_neighbors": "int"
                    },
                    3,
                    1
                ],
                {
                    "mi": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_selection\\rfe.py": [
        [
            "_rfe_single_fit",
            [
                [
                    {},
                    7,
                    7
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_selection\\univariate_selection.py": [
        [
            "_clean_nans",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_selection\\variance_threshold.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\__init__.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_base.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_chi2.py": [
        [
            "mkchi2",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_feature_select.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_from_model.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_mutual_info.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_rfe.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\test_variance_threshold.py": null,
    "../scikit-learn-master/sklearn\\feature_selection\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\correlation_models.py": [
        [
            "absolute_exponential",
            [
                [
                    {
                        "theta": "array_like",
                        "d": "array_like"
                    },
                    2,
                    0
                ],
                {
                    "r": "array_like"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\gaussian_process\\gaussian_process.py": [
        [
            "l1_cross_distances",
            [
                [
                    {
                        "X": "array_like"
                    },
                    1,
                    0
                ],
                {
                    "D": "D[k] = np.abs(X[ij[k, 0]] - Y[ij[k, 1]]).",
                    "ij": "arrays with shape (n_samples * (n_samples - 1) / 2, 2)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\gaussian_process\\gpc.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\gpr.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\kernels.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\regression_models.py": [
        [
            "constant",
            [
                [
                    {
                        "x": "array_like"
                    },
                    1,
                    0
                ],
                {
                    "f": "array_like"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\gaussian_process\\__init__.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\tests\\test_gaussian_process.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\tests\\test_gpc.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\tests\\test_gpr.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\tests\\test_kernels.py": null,
    "../scikit-learn-master/sklearn\\gaussian_process\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\base.py": [
        [
            "make_dataset",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\bayes.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\coordinate_descent.py": [
        [
            "_alpha_grid",
            [
                [
                    {
                        "X": "{array-like, sparse matrix}, shape (n_samples, n_features)",
                        "y": "ndarray, shape (n_samples,)",
                        "Xy": "array-like, optional",
                        "l1_ratio": "float",
                        "fit_intercept": "boolean, default True",
                        "eps": "float, optional",
                        "n_alphas": "int, optional",
                        "normalize": "boolean, optional, default False",
                        "copy_X": "boolean, optional, default True"
                    },
                    9,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\huber.py": [
        [
            "_huber_loss_and_gradient",
            [
                [
                    {
                        "w": "ndarray, shape (n_features + 1,) or (n_features + 2,)",
                        "X": "ndarray, shape (n_samples, n_features)",
                        "y": "ndarray, shape (n_samples,)",
                        "epsilon": "float",
                        "alpha": "float",
                        "sample_weight": "ndarray, shape (n_samples,), optional"
                    },
                    6,
                    0
                ],
                {
                    "w": "ndarray, shape (n_features + 1,) or (n_features + 2,)",
                    "X": "ndarray, shape (n_samples, n_features)",
                    "y": "ndarray, shape (n_samples,)",
                    "epsilon": "float",
                    "alpha": "float",
                    "sample_weight": "ndarray, shape (n_samples,), optional"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\least_angle.py": [
        [
            "lars_path",
            [
                [
                    {
                        "X": "array, shape",
                        "y": "array, shape",
                        "Xy": "array-like, shape (n_samples,) or (n_samples, n_targets),             optional",
                        "Gram": "None, 'auto', array, shape",
                        "max_iter": "integer, optional (default=500)",
                        "alpha_min": "float, optional (default=0)",
                        "method": "{'lar', 'lasso'}, optional (default='lar')",
                        "copy_X": "bool, optional (default=True)",
                        "eps": "float, optional (default=``np.finfo(np.float).eps``)",
                        "copy_Gram": "bool, optional (default=True)",
                        "verbose": "int (default=0)",
                        "return_path": "bool, optional (default=True)",
                        "return_n_iter": "bool, optional (default=False)",
                        "positive": "boolean (default=False)"
                    },
                    14,
                    0
                ],
                {
                    "alphas": "array, shape",
                    "active": "array, shape [n_alphas]",
                    "coefs": "array, shape (n_features, n_alphas + 1)",
                    "n_iter": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\logistic.py": [
        [
            "_intercept_dot",
            [
                [
                    {
                        "w": "ndarray, shape (n_features,) or (n_features + 1,)",
                        "X": "{array-like, sparse matrix}, shape (n_samples, n_features)",
                        "y": "ndarray, shape (n_samples,)"
                    },
                    3,
                    0
                ],
                {
                    "w": "ndarray, shape (n_features,)",
                    "X": "{array-like, sparse matrix}, shape (n_samples, n_features)",
                    "yz": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\omp.py": [
        [
            "_cholesky_omp",
            [
                [
                    {
                        "X": "array, shape (n_samples, n_features)",
                        "y": "array, shape (n_samples,)",
                        "n_nonzero_coefs": "int",
                        "tol": "float",
                        "copy_X": "bool, optional",
                        "return_path": "bool, optional. Default"
                    },
                    6,
                    0
                ],
                {
                    "gamma": "array, shape (n_nonzero_coefs,)",
                    "idx": "array, shape (n_nonzero_coefs,)",
                    "coef": "array, shape (n_features, n_nonzero_coefs)",
                    "n_active": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\passive_aggressive.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\perceptron.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\randomized_l1.py": [
        [
            "_lasso_stability_path",
            [
                [
                    {},
                    5,
                    5
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\ransac.py": [
        [
            "_dynamic_max_trials",
            [
                [
                    {
                        "n_inliers": "int",
                        "n_samples": "int",
                        "min_samples": "int",
                        "probability": "float"
                    },
                    4,
                    0
                ],
                {
                    "trials": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\ridge.py": [
        [
            "ridge_regression",
            [
                [
                    {
                        "X": "{array-like, sparse matrix, LinearOperator},",
                        "y": "array-like, shape = [n_samples] or [n_samples, n_targets]",
                        "alpha": "{float, array-like},",
                        "sample_weight": "float or numpy array of shape [n_samples]",
                        "solver": "{'auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag', 'saga'}",
                        "max_iter": "int, optional",
                        "tol": "float",
                        "verbose": "int",
                        "random_state": "int, RandomState instance or None, optional, default None",
                        "return_n_iter": "boolean, default False",
                        "return_intercept": "boolean, default False"
                    },
                    11,
                    0
                ],
                {
                    "coef": "array, shape = [n_features] or [n_targets, n_features]",
                    "n_iter": "int, optional",
                    "intercept": "float or array, shape = [n_targets]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\sag.py": [
        [
            "get_auto_step_size",
            [
                [
                    {
                        "max_squared_sum": "float",
                        "alpha_scaled": "float",
                        "loss": "string, in {\"log\", \"squared\"}",
                        "fit_intercept": "bool",
                        "n_samples": "int, optional",
                        "is_saga": "boolean, optional"
                    },
                    6,
                    0
                ],
                {
                    "step_size": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\setup.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\stochastic_gradient.py": [
        [
            "_prepare_fit_binary",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\theil_sen.py": [
        [
            "_modified_weiszfeld_step",
            [
                [
                    {
                        "X": "array, shape = [n_samples, n_features]",
                        "x_old": "array, shape = [n_features]"
                    },
                    2,
                    0
                ],
                {
                    "x_new": "array, shape = [n_features]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\__init__.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_base.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_bayes.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_coordinate_descent.py": [
        [
            "build_dataset",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_huber.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_least_angle.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_logistic.py": [
        [
            "check_predictions",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_omp.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_passive_aggressive.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_perceptron.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_randomized_l1.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_ransac.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_ridge.py": [
        [
            "test_class_weight_vs_sample_weight",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_sag.py": [
        [
            "test_sag_pobj_matches_logistic_regression",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_sgd.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_sparse_coordinate_descent.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\test_theil_sen.py": null,
    "../scikit-learn-master/sklearn\\linear_model\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\manifold\\isomap.py": null,
    "../scikit-learn-master/sklearn\\manifold\\locally_linear.py": [
        [
            "barycenter_weights",
            [
                [
                    {
                        "X": "array-like, shape (n_samples, n_dim)",
                        "Z": "array-like, shape (n_samples, n_neighbors, n_dim)",
                        "reg": "float, optional"
                    },
                    3,
                    0
                ],
                {
                    "B": "array-like, shape (n_samples, n_neighbors)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\mds.py": [
        [
            "_smacof_single",
            [
                [
                    {
                        "dissimilarities": "ndarray, shape (n_samples, n_samples)",
                        "metric": "boolean, optional, default",
                        "n_components": "int, optional, default",
                        "init": "ndarray, shape (n_samples, n_components), optional, default",
                        "max_iter": "int, optional, default",
                        "verbose": "int, optional, default",
                        "eps": "float, optional, default",
                        "random_state": "int, RandomState instance or None, optional, default"
                    },
                    8,
                    0
                ],
                {
                    "X": "ndarray, shape (n_samples, n_components)",
                    "stress": "float",
                    "n_iter": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\setup.py": null,
    "../scikit-learn-master/sklearn\\manifold\\spectral_embedding_.py": [
        [
            "_graph_connected_component",
            [
                [
                    {
                        "graph": "array-like, shape",
                        "node_id": "int"
                    },
                    2,
                    0
                ],
                {
                    "connected_components_matrix": "array-like, shape"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\t_sne.py": [
        [
            "_joint_probabilities",
            [
                [
                    {
                        "distances": "array, shape (n_samples * (n_samples-1) / 2,)",
                        "desired_perplexity": "float",
                        "verbose": "int"
                    },
                    3,
                    0
                ],
                {
                    "P": "array, shape (n_samples * (n_samples-1) / 2,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\__init__.py": null,
    "../scikit-learn-master/sklearn\\manifold\\tests\\test_isomap.py": null,
    "../scikit-learn-master/sklearn\\manifold\\tests\\test_locally_linear.py": null,
    "../scikit-learn-master/sklearn\\manifold\\tests\\test_mds.py": null,
    "../scikit-learn-master/sklearn\\manifold\\tests\\test_spectral_embedding.py": [
        [
            "_check_with_col_sign_flipping",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\tests\\test_t_sne.py": [
        [
            "test_optimization_minimizes_kl_divergence",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\manifold\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\metrics\\base.py": [
        [
            "_average_binary_score",
            [
                [
                    {
                        "binary_metric": "callable, returns shape [n_classes]",
                        "y_true": "array, shape = [n_samples] or [n_samples, n_classes]",
                        "y_score": "array, shape = [n_samples] or [n_samples, n_classes]",
                        "average": "string, [None, 'micro', 'macro' (default), 'samples', 'weighted']",
                        "sample_weight": "array-like of shape = [n_samples], optional"
                    },
                    5,
                    0
                ],
                {
                    "score": "float or array of shape [n_classes]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\classification.py": [
        [
            "_check_targets",
            [
                [
                    {
                        "y_true": "array-like",
                        "y_pred": "array-like"
                    },
                    2,
                    0
                ],
                {
                    "type_true": "one of {'multilabel-indicator', 'multiclass', 'binary'}",
                    "y_true": "array or indicator matrix",
                    "y_pred": "array or indicator matrix"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\pairwise.py": [
        [
            "_return_float_dtype",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\ranking.py": [
        [
            "auc",
            [
                [
                    {
                        "x": "array, shape = [n]",
                        "y": "array, shape = [n]",
                        "reorder": "boolean, optional (default=False)"
                    },
                    3,
                    0
                ],
                {
                    "auc": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\regression.py": [
        [
            "_check_reg_targets",
            [
                [
                    {
                        "y_true": "array-like,",
                        "y_pred": "array-like,",
                        "multioutput": "array-like or string in ['raw_values', uniform_average',"
                    },
                    3,
                    0
                ],
                {
                    "type_true": "one of {'continuous', continuous-multioutput'}",
                    "y_true": "array-like of shape = (n_samples, n_outputs)",
                    "y_pred": "array-like of shape = (n_samples, n_outputs)",
                    "multioutput": "array-like of shape = (n_outputs) or string in ['raw_values',"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\scorer.py": [
        [
            "get_scorer",
            [
                [
                    {
                        "scoring": "str | callable"
                    },
                    1,
                    0
                ],
                {
                    "scorer": "callable"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\setup.py": null,
    "../scikit-learn-master/sklearn\\metrics\\__init__.py": null,
    "../scikit-learn-master/sklearn\\metrics\\cluster\\bicluster.py": [
        [
            "_check_rows_and_columns",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\cluster\\setup.py": null,
    "../scikit-learn-master/sklearn\\metrics\\cluster\\supervised.py": [
        [
            "check_clusterings",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\cluster\\unsupervised.py": [
        [
            "silhouette_score",
            [
                [
                    {
                        "X": "array [n_samples_a, n_samples_a] if metric == \"precomputed\", or,              [n_samples_a, n_features] otherwise",
                        "labels": "array, shape = [n_samples]",
                        "metric": "string, or callable",
                        "sample_size": "int or None",
                        "random_state": "int, RandomState instance or None, optional (default=None)"
                    },
                    5,
                    0
                ],
                {
                    "silhouette": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\cluster\\__init__.py": null,
    "../scikit-learn-master/sklearn\\metrics\\cluster\\tests\\test_bicluster.py": [
        [
            "test_consensus_score_issue2445",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\cluster\\tests\\test_supervised.py": null,
    "../scikit-learn-master/sklearn\\metrics\\cluster\\tests\\test_unsupervised.py": null,
    "../scikit-learn-master/sklearn\\metrics\\cluster\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_classification.py": [
        [
            "make_prediction",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_common.py": null,
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_pairwise.py": null,
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_ranking.py": [
        [
            "make_prediction",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_regression.py": null,
    "../scikit-learn-master/sklearn\\metrics\\tests\\test_score_objects.py": null,
    "../scikit-learn-master/sklearn\\metrics\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\mixture\\base.py": [
        [
            "_check_shape",
            [
                [
                    {
                        "param": "array",
                        "param_shape": "tuple",
                        "name": "string"
                    },
                    3,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\bayesian_mixture.py": [
        [
            "_log_dirichlet_norm",
            [
                [
                    {
                        "dirichlet_concentration": "array-like, shape (n_samples,)"
                    },
                    1,
                    0
                ],
                {
                    "log_dirichlet_norm": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\dpgmm.py": [
        [
            "log_normalize",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\gaussian_mixture.py": [
        [
            "_check_weights",
            [
                [
                    {
                        "weights": "array-like, shape (n_components,)",
                        "n_components": "int"
                    },
                    2,
                    0
                ],
                {
                    "weights": "array, shape (n_components,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\gmm.py": [
        [
            "log_multivariate_normal_density",
            [
                [
                    {
                        "X": "array_like, shape (n_samples, n_features)",
                        "means": "array_like, shape (n_components, n_features)",
                        "covars": "array_like",
                        "covariance_type": "string"
                    },
                    4,
                    0
                ],
                {
                    "lpr": "array_like, shape (n_samples, n_components)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\__init__.py": null,
    "../scikit-learn-master/sklearn\\mixture\\tests\\test_bayesian_mixture.py": null,
    "../scikit-learn-master/sklearn\\mixture\\tests\\test_dpgmm.py": null,
    "../scikit-learn-master/sklearn\\mixture\\tests\\test_gaussian_mixture.py": null,
    "../scikit-learn-master/sklearn\\mixture\\tests\\test_gmm.py": [
        [
            "test_fit_predict",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\mixture\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\model_selection\\_search.py": [
        [
            "fit_grid_point",
            [
                [
                    {
                        "X": "array-like, sparse matrix or list",
                        "y": "array-like or None",
                        "estimator": "estimator object",
                        "parameters": "dict",
                        "train": "ndarray, dtype int or bool",
                        "test": "ndarray, dtype int or bool",
                        "scorer": "callable or None",
                        "verbose": "int",
                        "error_score": "'raise' (default) or numeric"
                    },
                    9,
                    0
                ],
                {
                    "score": "float",
                    "parameters": "dict",
                    "n_samples_test": "int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\model_selection\\_split.py": [
        [
            "_approximate_mode",
            [
                [
                    {
                        "class_counts": "ndarray of int",
                        "n_draws": "int",
                        "rng": "random state"
                    },
                    3,
                    0
                ],
                {
                    "sampled_classes": "ndarray of int"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\model_selection\\_validation.py": [
        [
            "cross_validate",
            [
                [
                    {
                        "estimator": "estimator object implementing 'fit'",
                        "X": "array-like",
                        "y": "array-like, optional, default",
                        "groups": "array-like, with shape (n_samples,), optional",
                        "scoring": "string, callable, list/tuple, dict or None, default",
                        "cv": "int, cross-validation generator or an iterable, optional",
                        "n_jobs": "integer, optional",
                        "verbose": "integer, optional",
                        "fit_params": "dict, optional",
                        "pre_dispatch": "int, or string, optional",
                        "return_train_score": "boolean, default True"
                    },
                    11,
                    0
                ],
                {
                    "scores": "dict of float arrays of shape=(n_splits,)",
                    "are": ""
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\model_selection\\__init__.py": null,
    "../scikit-learn-master/sklearn\\model_selection\\tests\\common.py": null,
    "../scikit-learn-master/sklearn\\model_selection\\tests\\test_search.py": [
        [
            "compare_cv_results_multimetric_with_single",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\model_selection\\tests\\test_split.py": null,
    "../scikit-learn-master/sklearn\\model_selection\\tests\\test_validation.py": null,
    "../scikit-learn-master/sklearn\\model_selection\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\approximate.py": [
        [
            "_find_matching_indices",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neighbors\\base.py": [
        [
            "_check_weights",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neighbors\\classification.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\graph.py": [
        [
            "_check_params",
            [
                [
                    {},
                    4,
                    4
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neighbors\\kde.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\lof.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\nearest_centroid.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\regression.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\setup.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\unsupervised.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\__init__.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_approximate.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_ball_tree.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_dist_metrics.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_kde.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_kd_tree.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_lof.py": [
        [
            "test_lof_precomputed",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_nearest_centroid.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_neighbors.py": [
        [
            "_weight_func",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neighbors\\tests\\test_quad_tree.py": null,
    "../scikit-learn-master/sklearn\\neighbors\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\multilayer_perceptron.py": [
        [
            "_pack",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neural_network\\rbm.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\_base.py": [
        [
            "identity",
            [
                [
                    {
                        "X": "{array-like, sparse matrix}, shape (n_samples, n_features)"
                    },
                    1,
                    0
                ],
                {
                    "X": "{array-like, sparse matrix}, shape (n_samples, n_features)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\neural_network\\_stochastic_optimizers.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\__init__.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\tests\\test_mlp.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\tests\\test_rbm.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\tests\\test_stochastic_optimizers.py": null,
    "../scikit-learn-master/sklearn\\neural_network\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\preprocessing\\data.py": [
        [
            "_handle_zeros_in_scale",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\preprocessing\\imputation.py": [
        [
            "_get_mask",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\preprocessing\\label.py": [
        [
            "label_binarize",
            [
                [
                    {
                        "y": "array-like",
                        "classes": "array-like of shape [n_classes]",
                        "neg_label": "int (default",
                        "pos_label": "int (default",
                        "sparse_output": "boolean (default"
                    },
                    5,
                    0
                ],
                {
                    "Y": "numpy array or CSR matrix of shape [n_samples, n_classes]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\preprocessing\\_function_transformer.py": [
        [
            "_identity",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\preprocessing\\__init__.py": null,
    "../scikit-learn-master/sklearn\\preprocessing\\tests\\test_data.py": null,
    "../scikit-learn-master/sklearn\\preprocessing\\tests\\test_function_transformer.py": null,
    "../scikit-learn-master/sklearn\\preprocessing\\tests\\test_imputation.py": [
        [
            "_check_statistics",
            [
                [
                    {},
                    5,
                    5
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\preprocessing\\tests\\test_label.py": null,
    "../scikit-learn-master/sklearn\\preprocessing\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\semi_supervised\\label_propagation.py": null,
    "../scikit-learn-master/sklearn\\semi_supervised\\__init__.py": null,
    "../scikit-learn-master/sklearn\\semi_supervised\\tests\\test_label_propagation.py": null,
    "../scikit-learn-master/sklearn\\semi_supervised\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\svm\\base.py": [
        [
            "_one_vs_one_coef",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\svm\\bounds.py": [
        [
            "l1_min_c",
            [
                [
                    {
                        "X": "array-like or sparse matrix, shape = [n_samples, n_features]",
                        "y": "array, shape = [n_samples]",
                        "loss": "{'squared_hinge', 'log'}, default 'squared_hinge'",
                        "fit_intercept": "bool, default",
                        "intercept_scaling": "float, default"
                    },
                    5,
                    0
                ],
                {
                    "l1_min_c": "float"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\svm\\classes.py": null,
    "../scikit-learn-master/sklearn\\svm\\setup.py": null,
    "../scikit-learn-master/sklearn\\svm\\__init__.py": null,
    "../scikit-learn-master/sklearn\\svm\\tests\\test_bounds.py": null,
    "../scikit-learn-master/sklearn\\svm\\tests\\test_sparse.py": [
        [
            "test_svc",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\svm\\tests\\test_svm.py": null,
    "../scikit-learn-master/sklearn\\svm\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_base.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_calibration.py": [
        [
            "test_calibration",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\tests\\test_check_build.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_common.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_config.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_cross_validation.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_discriminant_analysis.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_docstring_parameters.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_dummy.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_grid_search.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_init.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_isotonic.py": [
        [
            "test_isotonic_regression_ties_secondary_",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\tests\\test_kernel_approximation.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_kernel_ridge.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_learning_curve.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_metaestimators.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_multiclass.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_multioutput.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_naive_bayes.py": [
        [
            "test_gnb_sample_weight",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\tests\\test_pipeline.py": null,
    "../scikit-learn-master/sklearn\\tests\\test_random_projection.py": null,
    "../scikit-learn-master/sklearn\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\tree\\export.py": [
        [
            "_color_brew",
            [
                [
                    {
                        "n": "int"
                    },
                    1,
                    0
                ],
                {
                    "color_list": "list, length n"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\tree\\setup.py": null,
    "../scikit-learn-master/sklearn\\tree\\tree.py": null,
    "../scikit-learn-master/sklearn\\tree\\__init__.py": null,
    "../scikit-learn-master/sklearn\\tree\\tests\\test_export.py": null,
    "../scikit-learn-master/sklearn\\tree\\tests\\test_tree.py": [
        [
            "test_min_samples_split",
            [
                [
                    {},
                    0,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\tree\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\utils\\arpack.py": null,
    "../scikit-learn-master/sklearn\\utils\\bench.py": [
        [
            "total_seconds",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\class_weight.py": [
        [
            "compute_class_weight",
            [
                [
                    {
                        "class_weight": "dict, 'balanced' or None",
                        "classes": "ndarray",
                        "y": "array-like, shape (n_samples,)"
                    },
                    3,
                    0
                ],
                {
                    "class_weight_vect": "ndarray, shape (n_classes,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\deprecation.py": [
        [
            "_is_deprecated",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\estimator_checks.py": [
        [
            "check_estimator",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\extmath.py": [
        [
            "norm",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\fixes.py": [
        [
            "parallel_helper",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\graph.py": [
        [
            "single_source_shortest_path_length",
            [
                [
                    {
                        "graph": "sparse matrix or 2D array (preferably LIL matrix)",
                        "source": "node label",
                        "cutoff": "integer, optional"
                    },
                    3,
                    0
                ],
                {
                    "graph": "sparse matrix or 2D array (preferably LIL matrix)",
                    "source": "node label",
                    "cutoff": "integer, optional"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\linear_assignment_.py": [
        [
            "linear_assignment",
            [
                [
                    {
                        "X": "array"
                    },
                    1,
                    0
                ],
                {
                    "indices": "array,"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\metaestimators.py": [
        [
            "if_delegate_has_method",
            [
                [
                    {
                        "delegate": "string, list of strings or tuple of strings"
                    },
                    1,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\mocking.py": null,
    "../scikit-learn-master/sklearn\\utils\\multiclass.py": [
        [
            "unique_labels",
            [
                [
                    {},
                    0,
                    0
                ],
                {
                    "out": "numpy array of shape [n_unique_labels]"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\optimize.py": [
        [
            "_line_search_wolfe12",
            [
                [
                    {},
                    7,
                    7
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\random.py": [
        [
            "choice",
            [
                [
                    {
                        "a": "1-D array-like or int",
                        "size": "int or tuple of ints, optional",
                        "replace": "boolean, optional",
                        "p": "1-D array-like, optional",
                        "random_state": "int, RandomState instance or None, optional (default=None)"
                    },
                    5,
                    0
                ],
                {
                    "samples": "1-D ndarray, shape (size,)"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\setup.py": null,
    "../scikit-learn-master/sklearn\\utils\\sparsefuncs.py": [
        [
            "_raise_typeerror",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\stats.py": [
        [
            "_weighted_percentile",
            [
                [
                    {},
                    3,
                    3
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\testing.py": [
        [
            "assert_warns",
            [
                [
                    {
                        "warning_class": "the warning class",
                        "func": "callable"
                    },
                    2,
                    0
                ],
                {
                    "result": "the return value of `func`"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\validation.py": [
        [
            "_assert_all_finite",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\_scipy_sparse_lsqr_backport.py": [
        [
            "_sym_ortho",
            [
                [
                    {},
                    2,
                    2
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\_unittest_backport.py": null,
    "../scikit-learn-master/sklearn\\utils\\__init__.py": [
        [
            "safe_mask",
            [
                [
                    {
                        "X": "{array-like, sparse matrix}",
                        "mask": "array"
                    },
                    2,
                    0
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\sparsetools\\setup.py": null,
    "../scikit-learn-master/sklearn\\utils\\sparsetools\\__init__.py": null,
    "../scikit-learn-master/sklearn\\utils\\sparsetools\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_bench.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_class_weight.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_deprecation.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_estimator_checks.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_extmath.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_fast_dict.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_fixes.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_graph.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_linear_assignment.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_metaestimators.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_multiclass.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_murmurhash.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_optimize.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_random.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_seq_dataset.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_shortest_path.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_sparsefuncs.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_stats.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_testing.py": [
        [
            "f_ok",
            [
                [
                    {
                        "a": "int",
                        "b": "float"
                    },
                    2,
                    0
                ],
                {
                    "c": "list"
                }
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\utils\\tests\\test_utils.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\test_validation.py": null,
    "../scikit-learn-master/sklearn\\utils\\tests\\__init__.py": null,
    "../scikit-learn-master/sklearn\\_build_utils\\__init__.py": [
        [
            "build_from_c_and_cpp_files",
            [
                [
                    {},
                    1,
                    1
                ],
                {}
            ]
        ]
    ],
    "../scikit-learn-master/sklearn\\__check_build\\setup.py": null,
    "../scikit-learn-master/sklearn\\__check_build\\__init__.py": null
}